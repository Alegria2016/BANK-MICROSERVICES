services:
  mysql-account:
    image: mysql:8.0.33
    container_name: mysql-account
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: account_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: userpassword
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3307:3306"
    volumes:
      - mysql_account_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 30s
      retries: 5
      start_period: 40s

  mysql-client:
    image: mysql:8.0.33
    container_name: mysql-client  
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: client_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: userpassword
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3308:3306"
    volumes:
      - mysql_client_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 30s
      retries: 5
      start_period: 40s

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # Puerto para AMQP
      - "15672:15672" # Puerto para Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  account-service:
    build: 
      context: ./account-service
      dockerfile: Dockerfile
    container_name: account-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-account:3306/account_db
      SPRING_DATASOURCE_USERNAME: app_user
      SPRING_DATASOURCE_PASSWORD: userpassword
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      mysql-account:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/api/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  client-service:
    build:
      context: ./client-service  
      dockerfile: Dockerfile
    container_name: client-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-client:3306/client_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      mysql-client:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/api/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  mysql_account_data:
    driver: local
  mysql_client_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  default:
    name: bank-microservices-network
    driver: bridge